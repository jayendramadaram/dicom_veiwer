[{"C:\\tai_jutsu\\GENETICS\\dicom_viewer\\choijinkyung\\DICOM-Web-App-Viewer-based-React\\src\\index.js":"1","C:\\tai_jutsu\\GENETICS\\dicom_viewer\\choijinkyung\\DICOM-Web-App-Viewer-based-React\\src\\cornerstone\\initCornerstone.js":"2","C:\\tai_jutsu\\GENETICS\\dicom_viewer\\choijinkyung\\DICOM-Web-App-Viewer-based-React\\src\\App.js":"3","C:\\tai_jutsu\\GENETICS\\dicom_viewer\\choijinkyung\\DICOM-Web-App-Viewer-based-React\\src\\Component\\Viewer.js":"4"},{"size":255,"mtime":1646158921248,"results":"5","hashOfConfig":"6"},{"size":1570,"mtime":1646133292578,"results":"7","hashOfConfig":"6"},{"size":412,"mtime":1646160391633,"results":"8","hashOfConfig":"6"},{"size":5542,"mtime":1646161973243,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"154ybqt",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\tai_jutsu\\GENETICS\\dicom_viewer\\choijinkyung\\DICOM-Web-App-Viewer-based-React\\src\\index.js",[],"C:\\tai_jutsu\\GENETICS\\dicom_viewer\\choijinkyung\\DICOM-Web-App-Viewer-based-React\\src\\cornerstone\\initCornerstone.js",[],["20","21"],"C:\\tai_jutsu\\GENETICS\\dicom_viewer\\choijinkyung\\DICOM-Web-App-Viewer-based-React\\src\\App.js",["22"],"C:\\tai_jutsu\\GENETICS\\dicom_viewer\\choijinkyung\\DICOM-Web-App-Viewer-based-React\\src\\Component\\Viewer.js",["23"],"import React, { Component } from \"react\";\nimport CornerstoneViewport from \"react-cornerstone-viewport\";\nimport { useParams } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\n// let { loc } = useParams();\n\nclass Viewer extends Component {\n  stack1 = [\"jay\"];\n  state = {\n    activeViewportIndex: 0,\n    viewports: [0],\n    tools: [\n      // Mouse\n      {\n        name: \"Wwwc\",\n        mode: \"active\",\n        modeOptions: { mouseButtonMask: 1 },\n      },\n      {\n        name: \"Zoom\",\n        mode: \"active\",\n        modeOptions: { mouseButtonMask: 2 },\n      },\n      {\n        name: \"Pan\",\n        mode: \"active\",\n        modeOptions: { mouseButtonMask: 4 },\n      },\n      \"Length\",\n      \"Angle\",\n      \"Bidirectional\",\n      \"FreehandRoi\",\n      \"Eraser\",\n      // Scroll\n      { name: \"StackScrollMouseWheel\", mode: \"active\" },\n      // Touch\n      { name: \"PanMultiTouch\", mode: \"active\" },\n      { name: \"ZoomTouchPinch\", mode: \"active\" },\n      { name: \"StackScrollMultiTouch\", mode: \"active\" },\n    ],\n    imageIds: this.stack1,\n    // FORM\n    activeTool: \"Wwwc\",\n    imageIdIndex: 0,\n    isPlaying: false,\n    frameRate: 22,\n  };\n\n  componentWillMount() {\n    const id = this.props.match.params.id;\n    this.fetchData(id);\n  }\n\n  fetchData = (id) => {\n    this.stack1[0] = `wadouri:https://storage.jayendramadara.repl.co/download?id=${id}`;\n    console.log(this.stack1);\n    console.log(this.state.imageIds, \"hmm\");\n  };\n\n  render() {\n    return (\n      <div>\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {this.state.viewports.map((vp) => (\n            <CornerstoneViewport\n              key={vp}\n              style={{ minWidth: \"50%\", height: \"256px\", flex: \"1\" }}\n              tools={this.state.tools}\n              imageIds={this.state.imageIds}\n              imageIdIndex={this.state.imageIdIndex}\n              isPlaying={this.state.isPlaying}\n              frameRate={this.state.frameRate}\n              className={this.state.activeViewportIndex === vp ? \"active\" : \"\"}\n              activeTool={this.state.activeTool}\n              setViewportActive={() => {\n                this.setState({\n                  activeViewportIndex: vp,\n                });\n              }}\n            />\n          ))}\n        </div>\n\n        {/* FORM */}\n        <div style={{ marginTop: \"35px\" }}>\n          <form className='row'>\n            {/* FIRST COLUMN */}\n            <div className='col-md-6'>\n              <div className='form-group'>\n                <label htmlFor='active-tool'>Active Tool:</label>\n                <select\n                  value={this.state.activeTool}\n                  onChange={(evt) =>\n                    this.setState({ activeTool: evt.target.value })\n                  }\n                  className='form-control'\n                  id='active-tool'\n                >\n                  <option value='Wwwc'>Wwwc</option>\n                  <option value='Zoom'>Zoom</option>\n                  <option value='Pan'>Pan</option>\n                  <option value='Length'>Length</option>\n                  <option value='Angle'>Angle</option>\n                  <option value='Bidirectional'>Bidirectional</option>\n                  <option value='FreehandRoi'>Freehand</option>\n                  <option value='Eraser'>Eraser</option>\n                </select>\n              </div>\n              <div className='form-group'>\n                <label htmlFor='image-id-index'>Image ID Index:</label>\n                <input\n                  type='range'\n                  min='0'\n                  max={this.state.imageIds.length - 1}\n                  value={this.state.imageIdIndex}\n                  onChange={(evt) =>\n                    this.setState({ imageIdIndex: parseInt(evt.target.value) })\n                  }\n                  className='form-control'\n                  id='image-id-index'\n                ></input>\n              </div>\n            </div>\n            {/* SECOND COLUMN */}\n            <div className='col-md-6'>\n              <div className='form-group'>\n                <label htmlFor='active-viewport-index'>\n                  Active Viewport Index:\n                </label>\n                <input\n                  type='text'\n                  readOnly={true}\n                  value={this.state.activeViewportIndex}\n                  className='form-control'\n                  id='active-viewport-index'\n                ></input>\n              </div>\n              <div className='input-group'>\n                <span className='input-group-btn'>\n                  <button\n                    className='btn btn-default'\n                    type='button'\n                    onClick={() => {\n                      this.setState({\n                        isPlaying: !this.state.isPlaying,\n                      });\n                    }}\n                  >\n                    {this.state.isPlaying ? \"Stop\" : \"Start\"}\n                  </button>\n                </span>\n                <input\n                  type='number'\n                  className='form-control'\n                  value={this.state.frameRate}\n                  onChange={(evt) => {\n                    const frameRateInput = parseInt(evt.target.value);\n                    const frameRate = Math.max(Math.min(frameRateInput, 90), 1);\n\n                    this.setState({ frameRate });\n                  }}\n                />\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Viewer);\n",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":2,"column":42,"nodeType":"30","messageId":"31","endLine":2,"endColumn":46},{"ruleId":"28","severity":1,"message":"32","line":3,"column":10,"nodeType":"30","messageId":"31","endLine":3,"endColumn":19},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","no-global-assign","no-unsafe-negation"]